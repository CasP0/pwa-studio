{
  "name": "pwa-studio",
  "displayName": "PWA Studio",
  "description": "PWABuilder in your VSCode!",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.62.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:pwa-studio.helloWorld",
    "onCommand:pwa-studio.newPwaStarter",
    "onCommand:pwa-studio.serviceWorker",
    "onCommand:pwa-studio.validatePWA",
    "onCommand:pwa-studio.manifest",
    "onCommand:pwa-studio.packageApp",
    "onCommand:pwa-studio.generateWorker",
    "onCommand:pwa-studio.chooseManifest",
    "onCommand:pwa-studio.chooseServiceWorker",
    "onView:validationPanel",
    "onView:serviceWorkerPanel",
    "onView: packagePanel"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "pwa-studio.newPwaStarter",
        "title": "PWABuilder: New PWA"
      },
      {
        "command": "pwa-studio.serviceWorker",
        "title": "PWABuilder: Generate Service Worker",
        "icon": {
          "dark": "resources/add-dark.svg",
          "light": "resources/add-outline.svg"
        }
      },
      {
        "command": "pwa-studio.validatePWA",
        "title": "PWABuilder: Validate"
      },
      {
        "command": "pwa-studio.manifest",
        "title": "PWABuilder: Generate Web Manifest",
        "icon": {
          "dark": "resources/add-dark.svg",
          "light": "resources/add-outline.svg"
        }
      },
      {
        "command": "pwa-studio.chooseManifest",
        "title": "PWABuilder: Choose existing Web Manifest"
      },
      {
        "command": "pwa-studio.chooseServiceWorker",
        "title": "PWABuilder: Choose existing Service Worker"
      },
      {
        "command": "pwa-studio.packageApp",
        "title": "PWABuilder: Package your PWA"
      },
      {
        "command": "pwa-studio.maniItemDocs",
        "title": "More Info"
      },
      {
        "command": "pwa-studio.refreshEntry",
        "title": "Refresh",
        "icon": {
          "light": "resources/refresh-outline.svg",
          "dark": "resources/refresh-dark.svg"
        }
      },
      {
        "command": "pwa-studio.refreshSWView",
        "title": "Refresh",
        "icon": {
          "light": "resources/refresh-outline.svg",
          "dark": "resources/refresh-dark.svg"
        }
      },
      {
        "command": "pwa-studio.refreshPackageView",
        "title": "Refresh",
        "icon": {
          "light": "resources/refresh-outline.svg",
          "dark": "resources/refresh-dark.svg"
        }
      },
      {
        "command": "pwa-studio.setWebURL",
        "title": "PWABuilder: Set App URL"
      }
    ],
    "viewsWelcome": [
      {
        "view": "validationPanel",
        "contents": "No Web Manifest found [learn more](https://docs.microsoft.com/microsoft-edge/progressive-web-apps-chromium/how-to/web-app-manifests).\n[I have a Web Manifest](command:pwa-studio.chooseManifest) \n[Generate a Web Manifest](command:pwa-studio.manifest)"
      },
      {
        "view": "serviceWorkerPanel",
        "contents": "No Service Worker found [learn more](https://docs.microsoft.com/microsoft-edge/progressive-web-apps-chromium/how-to/service-workers).\n[I have a Service Worker](command:pwa-studio.chooseServiceWorker) \n[Generate a Service Worker](command:pwa-studio.serviceWorker)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "pwabuilder-view",
          "title": "PWABuilder",
          "icon": "resources/pwabuilder-icon.svg"
        }
      ]
    },
    "views": {
      "pwabuilder-view": [
        {
          "id": "validationPanel",
          "name": "Web Manifest"
        },
        {
          "id": "serviceWorkerPanel",
          "name": "Service Worker"
        },
        {
          "id": "packagePanel",
          "name": "Store Ready Checklist"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "pwa-studio.serviceWorker",
          "when": "view == serviceWorkerPanel",
          "group": "navigation"
        },
        {
          "command": "pwa-studio.manifest",
          "when": "view == validationPanel",
          "group": "navigation"
        },
        {
          "command": "pwa-studio.refreshEntry",
          "when": "view == validationPanel",
          "group": "navigation"
        },
        {
          "command": "pwa-studio.refreshSWView",
          "when": "view == serviceWorkerPanel",
          "group": "navigation"
        },
        {
          "command": "pwa-studio.setWebURL",
          "when": "view == packagePanel",
          "group": "navigation"
        },
        {
          "command": "pwa-studio.packageApp",
          "when": "view == packagePanel",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "pwa-studio.maniItemDocs",
          "when": "view == validationPanel",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/fs-extra": "^9.0.13",
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.0.0",
    "@types/node": "14.x",
    "@types/node-fetch": "^2.5.12",
    "@types/vscode": "^1.62.0",
    "@typescript-eslint/eslint-plugin": "^5.1.0",
    "@typescript-eslint/parser": "^5.1.0",
    "@vscode/test-electron": "^1.6.2",
    "eslint": "^8.1.0",
    "glob": "^7.1.7",
    "hint": "^6.1.9",
    "mocha": "^9.1.3",
    "typescript": "^4.4.4"
  },
  "dependencies": {
    "formdata-node": "^4.3.2",
    "formdata-polyfill": "^4.0.10",
    "node-fetch": "^2.6.6",
    "shelljs": "^0.8.4",
    "workbox-build": "^6.4.2"
  }
}
